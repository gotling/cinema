{"version":3,"sources":["src/accordion.js","src/app.js","src/cinema-service.js","src/cinema.js","src/environment.js","src/main.js","src/remote.js","src/resources/index.js"],"names":["Accordion","service","getPlaylist","then","movies","playNow","movie","getImageUrl","App","message","configureRouter","config","router","options","pushState","root","hashChange","map","route","name","moduleId","nav","title","baseUrl","CinemaService","getMovies","get","play","post","stop","fwd30","fwd600","back30","back600","subtitleToggle","subtitleNext","volumeUp","volumeDown","path","init","method","mode","fetch","response","json","result","data","headers","console","log","JSON","stringify","Cinema","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","Remote"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {CinemaService} from 'cinema-service';\n\nimport 'bootstrap';\n\n@inject(CinemaService)\nexport class Accordion {\n  constructor(service) {\n    this.service = service;\n    this.service.getPlaylist().then(movies => {\n      this.movies = movies;\n    })\n  }\n\n  playNow(movie) {\n    this.service.playNow(movie);\n  }\n\n  getImageUrl(movie) {\n  }\n}\n","export class App {\n  constructor() {\n    this.message = 'Cinema App';\n  }\n\n  configureRouter(config, router) {\n    // NO MORE HASH!\n    config.options.pushState = true;\n    config.options.root = '/';\n    config.options.hashChange = false;\n\n    config.map([\n        {route: [''], name: 'home', moduleId: 'cinema', nav: true, title: 'Cinema'},\n    ]);\n    this.router = router;\n  }\n}\n","//let baseUrl = 'http://localhost:3000/';\nlet baseUrl = 'http://cinema.lan/';\n\nexport class CinemaService {\n  getMovies() {\n    return get('list');\n  }\n\n  getPlaylist() {\n    return get('playlist');\n  }\n\n  play() {\n    return post('control/play');\n  }\n\n  playNow(movie) {\n    return post('play-now', movie);\n  }\n\n  stop() {\n    return post('control/stop');\n  }\n\n  fwd30() {\n    return post('control/fwd30');\n  }\n\n  fwd600() {\n    return post('control/fwd600');\n  }\n\n  back30() {\n    return post('control/back30');\n  }\n\n  back600() {\n    return post('control/back600');\n  }\n\n  subtitleToggle() {\n    return post('control/subtitle.toggle');\n  }\n\n  subtitleNext() {\n    return post('control/subtitle.next');\n  }\n\n  volumeUp() {\n    return post('control/volume.up');\n  }\n\n  volumeDown() {\n    return post('control/volume.down');\n  }\n}\n\nfunction get(path) {\n  let init = {\n      method: 'GET',\n      mode: 'cors'\n  };\n\n  return fetch(baseUrl + path, init).then(response => response.json()).then(result => {\n    return result;\n  });\n}\n\nfunction post(path, data = false) {\n  let init = {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n  };\n\n  console.log(data);\n\n  if (data) {\n    init['body'] = JSON.stringify(data);\n  }\n\n  return fetch(baseUrl + path, init);\n}\n","export class Cinema {\n  constructor() {}\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\nimport {CinemaService} from './cinema-service';\n\n@inject(CinemaService)\nexport class Remote {\n  constructor(service) {\n    this.service = service;\n  }\n\n  play() {\n    this.service.play();\n  }\n\n  stop() {\n    this.service.stop();\n  }\n\n  fwd30() {\n    this.service.fwd30();\n  }\n\n  fwd600() {\n    this.service.fwd600();\n  }\n\n  back30() {\n    this.service.back30();\n  }\n\n  back600() {\n    this.service.back600();\n  }\n\n  subtitleToggle() {\n    this.service.subtitleToggle();\n  }\n\n  subtitleNext() {\n    this.service.subtitleNext();\n  }\n\n  volumeUp() {\n    this.service.volumeUp();\n  }\n\n  volumeDown() {\n    this.service.volumeDown();\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}